2025-03-01 22:02:57.470204-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PERSONA" not found (this database is empty); SQL statement:
INSERT INTO PERSONA (id_persona, nombre, apellidos, email) VALUES (?, ?, ?, ?) [42104-224]
2025-03-01 22:03:19.717610-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PERSONA" not found (this database is empty); SQL statement:
INSERT INTO PERSONA (id_persona, nombre, apellidos, email) VALUES (?, ?, ?, ?) [42104-224]
2025-03-01 22:03:22.287219-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PERSONA" not found (this database is empty); SQL statement:
INSERT INTO PERSONA (id_persona, nombre, apellidos, email, codigo, id_programa, activo, promedio) VALUES (?, ?, ?, ?, ?, ?, ?, ?) [42104-224]
2025-03-01 22:03:22.718212-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PERSONA" not found (this database is empty); SQL statement:
INSERT INTO PERSONA (id_persona, nombre, apellidos, email, tipo_contrato) VALUES (?, ?, ?, ?, ?) [42104-224]
2025-03-01 22:03:24.331579-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "FACULTAD" not found (this database is empty); SQL statement:
INSERT INTO FACULTAD (id_facultad, nombre, id_decano) VALUES (?, ?, ?) [42104-224]
2025-03-01 22:03:25.810329-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PROGRAMA" not found (this database is empty); SQL statement:
INSERT INTO PROGRAMA (id_programa, nombre, duracion, registro, id_facultad) VALUES (?, ?, ?, ?, ?) [42104-224]
2025-03-01 22:03:32.284110-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CURSO" not found (this database is empty); SQL statement:
INSERT INTO CURSO (id_curso, nombre, activo, programa) VALUES (?, ?, ?, ?) [42104-224]
2025-03-01 22:03:34.182527-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "INSCRIPCION" not found (this database is empty); SQL statement:
INSERT INTO INSCRIPCION (id_curso, anio, semestre, id_estudiante) VALUES (?, ?, ?, ?) [42104-224]
2025-03-01 22:03:34.779709-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "FACULTAD" not found (this database is empty); SQL statement:
INSERT INTO FACULTAD (id_profesor, anio, semestre, id_curso) VALUES (?, ?, ?, ?) [42104-224]
2025-03-01 22:16:32.407925-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "CREATE TABLE INSCRIPCION (\000a                             id_inscripcion DOUBLE PRIMARY KEY [*]GENERATED BY DEFAULT AS IDENTITY,\000a                             id_curso INT NOT NULL,\000a                             anio INT NOT NULL,\000a                             semestre INT NOT NULL,\000a                             id_estudiante DOUBLE NOT NULL\000a);\000a\000aCREATE TABLE CURSO_PROFESOR (\000a                                id_curso_profesor DOUBLE PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,\000a                                id_profesor DOUBLE NOT NULL,\000a                                anio INT NOT NULL,\000a                                semestre INT NOT NULL,\000a                                id_curso INT NOT NULL\000a);\000a\000a--Relaciones\000a\000aALTER TABLE PERSONA\000a    ADD CONSTRAINT fk_persona_programa FOREIGN KEY (id_programa) REFERENCES PROGRAMA(id_programa);\000a\000aALTER TABLE FACULTAD\000a    ADD CONSTRAINT fk_facultad_decano FOREIGN KEY (id_decano) REFERENCES PERSONA(id_persona);\000a\000aALTER TABLE PROGRAMA\000a    ADD CONSTRAINT fk_programa_facultad FOREIGN KEY (id_facultad) REFERENCES FACULTAD(id_facultad);\000a\000aALTER TABLE CURSO\000a    ADD CONSTRAINT fk_curso_programa FOREIGN KEY (id_programa) REFERENCES PROGRAMA(id_programa);\000a\000aALTER TABLE INSCRIPCION\000a    ADD CONSTRAINT fk_inscripcion_curso FOREIGN KEY (id_curso) REFERENCES CURSO(id_curso);\000a\000aALTER TABLE INSCRIPCION\000a    ADD CONSTRAINT fk_inscripcion_estudiante FOREIGN KEY (id_estudiante) REFERENCES PERSONA(id_persona);\000a\000aALTER TABLE CURSO_PROFESOR\000a    ADD CONSTRAINT fk_curso_profesor_profesor FOREIGN KEY (id_profesor) REFERENCES PERSONA(id_persona);\000a\000aALTER TABLE CURSO_PROFESOR\000a    ADD CONSTRAINT fk_curso_profesor_curso FOREIGN KEY (id_curso) REFERENCES CURSO(id_curso);\000a"; se esperaba "HASH, CONSTRAINT, COMMENT, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"
Syntax error in SQL statement "CREATE TABLE INSCRIPCION (\000a                             id_inscripcion DOUBLE PRIMARY KEY [*]GENERATED BY DEFAULT AS IDENTITY,\000a                             id_curso INT NOT NULL,\000a                             anio INT NOT NULL,\000a                             semestre INT NOT NULL,\000a                             id_estudiante DOUBLE NOT NULL\000a);\000a\000aCREATE TABLE CURSO_PROFESOR (\000a                                id_curso_profesor DOUBLE PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,\000a                                id_profesor DOUBLE NOT NULL,\000a                                anio INT NOT NULL,\000a                                semestre INT NOT NULL,\000a                                id_curso INT NOT NULL\000a);\000a\000a--Relaciones\000a\000aALTER TABLE PERSONA\000a    ADD CONSTRAINT fk_persona_programa FOREIGN KEY (id_programa) REFERENCES PROGRAMA(id_programa);\000a\000aALTER TABLE FACULTAD\000a    ADD CONSTRAINT fk_facultad_decano FOREIGN KEY (id_decano) REFERENCES PERSONA(id_persona);\000a\000aALTER TABLE PROGRAMA\000a    ADD CONSTRAINT fk_programa_facultad FOREIGN KEY (id_facultad) REFERENCES FACULTAD(id_facultad);\000a\000aALTER TABLE CURSO\000a    ADD CONSTRAINT fk_curso_programa FOREIGN KEY (id_programa) REFERENCES PROGRAMA(id_programa);\000a\000aALTER TABLE INSCRIPCION\000a    ADD CONSTRAINT fk_inscripcion_curso FOREIGN KEY (id_curso) REFERENCES CURSO(id_curso);\000a\000aALTER TABLE INSCRIPCION\000a    ADD CONSTRAINT fk_inscripcion_estudiante FOREIGN KEY (id_estudiante) REFERENCES PERSONA(id_persona);\000a\000aALTER TABLE CURSO_PROFESOR\000a    ADD CONSTRAINT fk_curso_profesor_profesor FOREIGN KEY (id_profesor) REFERENCES PERSONA(id_persona);\000a\000aALTER TABLE CURSO_PROFESOR\000a    ADD CONSTRAINT fk_curso_profesor_curso FOREIGN KEY (id_curso) REFERENCES CURSO(id_curso);\000a"; expected "HASH, CONSTRAINT, COMMENT, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE TABLE INSCRIPCION (
                             id_inscripcion DOUBLE PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                             id_curso INT NOT NULL,
                             anio INT NOT NULL,
                             semestre INT NOT NULL,
                             id_estudiante DOUBLE NOT NULL
);

CREATE TABLE CURSO_PROFESOR (
                                id_curso_profesor DOUBLE PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                                id_profesor DOUBLE NOT NULL,
                                anio INT NOT NULL,
                                semestre INT NOT NULL,
                                id_curso INT NOT NULL
);

--Relaciones

ALTER TABLE PERSONA
    ADD CONSTRAINT fk_persona_programa FOREIGN KEY (id_programa) REFERENCES PROGRAMA(id_programa);

ALTER TABLE FACULTAD
    ADD CONSTRAINT fk_facultad_decano FOREIGN KEY (id_decano) REFERENCES PERSONA(id_persona);

ALTER TABLE PROGRAMA
    ADD CONSTRAINT fk_programa_facultad FOREIGN KEY (id_facultad) REFERENCES FACULTAD(id_facultad);

ALTER TABLE CURSO
    ADD CONSTRAINT fk_curso_programa FOREIGN KEY (id_programa) REFERENCES PROGRAMA(id_programa);

ALTER TABLE INSCRIPCION
    ADD CONSTRAINT fk_inscripcion_curso FOREIGN KEY (id_curso) REFERENCES CURSO(id_curso);

ALTER TABLE INSCRIPCION
    ADD CONSTRAINT fk_inscripcion_estudiante FOREIGN KEY (id_estudiante) REFERENCES PERSONA(id_persona);

ALTER TABLE CURSO_PROFESOR
    ADD CONSTRAINT fk_curso_profesor_profesor FOREIGN KEY (id_profesor) REFERENCES PERSONA(id_persona);

ALTER TABLE CURSO_PROFESOR
    ADD CONSTRAINT fk_curso_profesor_curso FOREIGN KEY (id_curso) REFERENCES CURSO(id_curso);
 [42001-224]
2025-03-01 22:17:54.733426-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "PROGRAMA" ya existe
Table "PROGRAMA" already exists; SQL statement:

--Tablas
CREATE TABLE PROGRAMA (
                          id_programa DOUBLE PRIMARY KEY,
                          nombre VARCHAR(50) NOT NULL,
                          duracion DOUBLE NOT NULL,
                          registro DATE NOT NULL,
                          id_facultad DOUBLE NOT NULL
) [42101-224]
2025-03-01 22:22:59.844310-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "PROGRAMA" ya existe
Table "PROGRAMA" already exists; SQL statement:

--Tablas
CREATE TABLE PROGRAMA (
                          id_programa DOUBLE PRIMARY KEY,
                          nombre VARCHAR(50) NOT NULL,
                          duracion DOUBLE NOT NULL,
                          registro DATE NOT NULL,
                          id_facultad DOUBLE NOT NULL
) [42101-224]
2025-03-01 22:23:26.794875-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "PERSONA" ya existe
Table "PERSONA" already exists; SQL statement:


CREATE TABLE PERSONA (
                         id_persona DOUBLE PRIMARY KEY,
                         nombre VARCHAR(50) NOT NULL,
                         apellidos VARCHAR(50) NOT NULL,
                         email VARCHAR(128) NOT NULL,
                         tipo VARCHAR(10) NOT NULL,
                         codigo DOUBLE NULL,
                         id_programa DOUBLE NULL,
                         activo BOOLEAN NULL,
                         promedio DOUBLE NULL,
                         tipo_contrato VARCHAR(50) NULL
) [42101-224]
2025-03-01 22:23:47.362606-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "PROGRAMA" ya existe
Table "PROGRAMA" already exists; SQL statement:

--Tablas
CREATE TABLE PROGRAMA (
                          id_programa DOUBLE PRIMARY KEY,
                          nombre VARCHAR(50) NOT NULL,
                          duracion DOUBLE NOT NULL,
                          registro DATE NOT NULL,
                          id_facultad DOUBLE NOT NULL
) [42101-224]
2025-03-01 22:24:01.020534-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "FACULTAD" ya existe
Table "FACULTAD" already exists; SQL statement:

CREATE TABLE FACULTAD (
                          id_facultad DOUBLE PRIMARY KEY,
                          nombre VARCHAR(50) NOT NULL,
                          id_decano DOUBLE NOT NULL
) [42101-224]
2025-03-01 22:24:12.533569-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "CURSO" ya existe
Table "CURSO" already exists; SQL statement:


CREATE TABLE CURSO (
                       id_curso INT PRIMARY KEY,
                       nombre VARCHAR(50) NOT NULL,
                       activo BOOLEAN NULL,
                       id_programa DOUBLE NOT NULL
) [42101-224]
2025-03-01 22:24:19.972803-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "\000a\000aCREATE TABLE INSCRIPCION (\000a                             id_inscripcion DOUBLE PRIMARY KEY [*]GENERATED BY DEFAULT AS IDENTITY,\000a                             id_curso INT NOT NULL,\000a                             anio INT NOT NULL,\000a                             semestre INT NOT NULL,\000a                             id_estudiante DOUBLE NOT NULL\000a);\000a\000aCREATE TABLE CURSO_PROFESOR (\000a                                id_curso_profesor DOUBLE PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,\000a                                id_profesor DOUBLE NOT NULL,\000a                                anio INT NOT NULL,\000a                                semestre INT NOT NULL,\000a                                id_curso INT NOT NULL\000a);\000a\000a--Relaciones\000a\000aALTER TABLE PERSONA\000a    ADD CONSTRAINT fk_persona_programa FOREIGN KEY (id_programa) REFERENCES PROGRAMA(id_programa);\000a\000aALTER TABLE FACULTAD\000a    ADD CONSTRAINT fk_facultad_decano FOREIGN KEY (id_decano) REFERENCES PERSONA(id_persona);\000a\000aALTER TABLE PROGRAMA\000a    ADD CONSTRAINT fk_programa_facultad FOREIGN KEY (id_facultad) REFERENCES FACULTAD(id_facultad);\000a\000aALTER TABLE CURSO\000a    ADD CONSTRAINT fk_curso_programa FOREIGN KEY (id_programa) REFERENCES PROGRAMA(id_programa);\000a\000aALTER TABLE INSCRIPCION\000a    ADD CONSTRAINT fk_inscripcion_curso FOREIGN KEY (id_curso) REFERENCES CURSO(id_curso);\000a\000aALTER TABLE INSCRIPCION\000a    ADD CONSTRAINT fk_inscripcion_estudiante FOREIGN KEY (id_estudiante) REFERENCES PERSONA(id_persona);\000a\000aALTER TABLE CURSO_PROFESOR\000a    ADD CONSTRAINT fk_curso_profesor_profesor FOREIGN KEY (id_profesor) REFERENCES PERSONA(id_persona);\000a\000aALTER TABLE CURSO_PROFESOR\000a    ADD CONSTRAINT fk_curso_profesor_curso FOREIGN KEY (id_curso) REFERENCES CURSO(id_curso);\000a"; se esperaba "HASH, CONSTRAINT, COMMENT, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"
Syntax error in SQL statement "\000a\000aCREATE TABLE INSCRIPCION (\000a                             id_inscripcion DOUBLE PRIMARY KEY [*]GENERATED BY DEFAULT AS IDENTITY,\000a                             id_curso INT NOT NULL,\000a                             anio INT NOT NULL,\000a                             semestre INT NOT NULL,\000a                             id_estudiante DOUBLE NOT NULL\000a);\000a\000aCREATE TABLE CURSO_PROFESOR (\000a                                id_curso_profesor DOUBLE PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,\000a                                id_profesor DOUBLE NOT NULL,\000a                                anio INT NOT NULL,\000a                                semestre INT NOT NULL,\000a                                id_curso INT NOT NULL\000a);\000a\000a--Relaciones\000a\000aALTER TABLE PERSONA\000a    ADD CONSTRAINT fk_persona_programa FOREIGN KEY (id_programa) REFERENCES PROGRAMA(id_programa);\000a\000aALTER TABLE FACULTAD\000a    ADD CONSTRAINT fk_facultad_decano FOREIGN KEY (id_decano) REFERENCES PERSONA(id_persona);\000a\000aALTER TABLE PROGRAMA\000a    ADD CONSTRAINT fk_programa_facultad FOREIGN KEY (id_facultad) REFERENCES FACULTAD(id_facultad);\000a\000aALTER TABLE CURSO\000a    ADD CONSTRAINT fk_curso_programa FOREIGN KEY (id_programa) REFERENCES PROGRAMA(id_programa);\000a\000aALTER TABLE INSCRIPCION\000a    ADD CONSTRAINT fk_inscripcion_curso FOREIGN KEY (id_curso) REFERENCES CURSO(id_curso);\000a\000aALTER TABLE INSCRIPCION\000a    ADD CONSTRAINT fk_inscripcion_estudiante FOREIGN KEY (id_estudiante) REFERENCES PERSONA(id_persona);\000a\000aALTER TABLE CURSO_PROFESOR\000a    ADD CONSTRAINT fk_curso_profesor_profesor FOREIGN KEY (id_profesor) REFERENCES PERSONA(id_persona);\000a\000aALTER TABLE CURSO_PROFESOR\000a    ADD CONSTRAINT fk_curso_profesor_curso FOREIGN KEY (id_curso) REFERENCES CURSO(id_curso);\000a"; expected "HASH, CONSTRAINT, COMMENT, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"; SQL statement:


CREATE TABLE INSCRIPCION (
                             id_inscripcion DOUBLE PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                             id_curso INT NOT NULL,
                             anio INT NOT NULL,
                             semestre INT NOT NULL,
                             id_estudiante DOUBLE NOT NULL
);

CREATE TABLE CURSO_PROFESOR (
                                id_curso_profesor DOUBLE PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                                id_profesor DOUBLE NOT NULL,
                                anio INT NOT NULL,
                                semestre INT NOT NULL,
                                id_curso INT NOT NULL
);

--Relaciones

ALTER TABLE PERSONA
    ADD CONSTRAINT fk_persona_programa FOREIGN KEY (id_programa) REFERENCES PROGRAMA(id_programa);

ALTER TABLE FACULTAD
    ADD CONSTRAINT fk_facultad_decano FOREIGN KEY (id_decano) REFERENCES PERSONA(id_persona);

ALTER TABLE PROGRAMA
    ADD CONSTRAINT fk_programa_facultad FOREIGN KEY (id_facultad) REFERENCES FACULTAD(id_facultad);

ALTER TABLE CURSO
    ADD CONSTRAINT fk_curso_programa FOREIGN KEY (id_programa) REFERENCES PROGRAMA(id_programa);

ALTER TABLE INSCRIPCION
    ADD CONSTRAINT fk_inscripcion_curso FOREIGN KEY (id_curso) REFERENCES CURSO(id_curso);

ALTER TABLE INSCRIPCION
    ADD CONSTRAINT fk_inscripcion_estudiante FOREIGN KEY (id_estudiante) REFERENCES PERSONA(id_persona);

ALTER TABLE CURSO_PROFESOR
    ADD CONSTRAINT fk_curso_profesor_profesor FOREIGN KEY (id_profesor) REFERENCES PERSONA(id_persona);

ALTER TABLE CURSO_PROFESOR
    ADD CONSTRAINT fk_curso_profesor_curso FOREIGN KEY (id_curso) REFERENCES CURSO(id_curso);
 [42001-224]
2025-03-01 22:25:32.379571-05:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "\000a\000aCREATE TABLE INSCRIPCION (\000a                             id_inscripcion INT PRIMARY KEY [*]GENERATED BY DEFAULT AS IDENTITY,\000a                             id_curso INT NOT NULL,\000a                             anio INT NOT NULL,\000a                             semestre INT NOT NULL,\000a                             id_estudiante DOUBLE NOT NULL\000a);\000a\000aCREATE TABLE CURSO_PROFESOR (\000a                                id_curso_profesor INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,\000a                                id_profesor DOUBLE NOT NULL,\000a                                anio INT NOT NULL,\000a                                semestre INT NOT NULL,\000a                                id_curso INT NOT NULL\000a);\000a\000a--Relaciones\000a\000aALTER TABLE PERSONA\000a    ADD CONSTRAINT fk_persona_programa FOREIGN KEY (id_programa) REFERENCES PROGRAMA(id_programa);\000a\000aALTER TABLE FACULTAD\000a    ADD CONSTRAINT fk_facultad_decano FOREIGN KEY (id_decano) REFERENCES PERSONA(id_persona);\000a\000aALTER TABLE PROGRAMA\000a    ADD CONSTRAINT fk_programa_facultad FOREIGN KEY (id_facultad) REFERENCES FACULTAD(id_facultad);\000a\000aALTER TABLE CURSO\000a    ADD CONSTRAINT fk_curso_programa FOREIGN KEY (id_programa) REFERENCES PROGRAMA(id_programa);\000a\000aALTER TABLE INSCRIPCION\000a    ADD CONSTRAINT fk_inscripcion_curso FOREIGN KEY (id_curso) REFERENCES CURSO(id_curso);\000a\000aALTER TABLE INSCRIPCION\000a    ADD CONSTRAINT fk_inscripcion_estudiante FOREIGN KEY (id_estudiante) REFERENCES PERSONA(id_persona);\000a\000aALTER TABLE CURSO_PROFESOR\000a    ADD CONSTRAINT fk_curso_profesor_profesor FOREIGN KEY (id_profesor) REFERENCES PERSONA(id_persona);\000a\000aALTER TABLE CURSO_PROFESOR\000a    ADD CONSTRAINT fk_curso_profesor_curso FOREIGN KEY (id_curso) REFERENCES CURSO(id_curso);\000a"; se esperaba "HASH, CONSTRAINT, COMMENT, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"
Syntax error in SQL statement "\000a\000aCREATE TABLE INSCRIPCION (\000a                             id_inscripcion INT PRIMARY KEY [*]GENERATED BY DEFAULT AS IDENTITY,\000a                             id_curso INT NOT NULL,\000a                             anio INT NOT NULL,\000a                             semestre INT NOT NULL,\000a                             id_estudiante DOUBLE NOT NULL\000a);\000a\000aCREATE TABLE CURSO_PROFESOR (\000a                                id_curso_profesor INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,\000a                                id_profesor DOUBLE NOT NULL,\000a                                anio INT NOT NULL,\000a                                semestre INT NOT NULL,\000a                                id_curso INT NOT NULL\000a);\000a\000a--Relaciones\000a\000aALTER TABLE PERSONA\000a    ADD CONSTRAINT fk_persona_programa FOREIGN KEY (id_programa) REFERENCES PROGRAMA(id_programa);\000a\000aALTER TABLE FACULTAD\000a    ADD CONSTRAINT fk_facultad_decano FOREIGN KEY (id_decano) REFERENCES PERSONA(id_persona);\000a\000aALTER TABLE PROGRAMA\000a    ADD CONSTRAINT fk_programa_facultad FOREIGN KEY (id_facultad) REFERENCES FACULTAD(id_facultad);\000a\000aALTER TABLE CURSO\000a    ADD CONSTRAINT fk_curso_programa FOREIGN KEY (id_programa) REFERENCES PROGRAMA(id_programa);\000a\000aALTER TABLE INSCRIPCION\000a    ADD CONSTRAINT fk_inscripcion_curso FOREIGN KEY (id_curso) REFERENCES CURSO(id_curso);\000a\000aALTER TABLE INSCRIPCION\000a    ADD CONSTRAINT fk_inscripcion_estudiante FOREIGN KEY (id_estudiante) REFERENCES PERSONA(id_persona);\000a\000aALTER TABLE CURSO_PROFESOR\000a    ADD CONSTRAINT fk_curso_profesor_profesor FOREIGN KEY (id_profesor) REFERENCES PERSONA(id_persona);\000a\000aALTER TABLE CURSO_PROFESOR\000a    ADD CONSTRAINT fk_curso_profesor_curso FOREIGN KEY (id_curso) REFERENCES CURSO(id_curso);\000a"; expected "HASH, CONSTRAINT, COMMENT, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"; SQL statement:


CREATE TABLE INSCRIPCION (
                             id_inscripcion INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                             id_curso INT NOT NULL,
                             anio INT NOT NULL,
                             semestre INT NOT NULL,
                             id_estudiante DOUBLE NOT NULL
);

CREATE TABLE CURSO_PROFESOR (
                                id_curso_profesor INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                                id_profesor DOUBLE NOT NULL,
                                anio INT NOT NULL,
                                semestre INT NOT NULL,
                                id_curso INT NOT NULL
);

--Relaciones

ALTER TABLE PERSONA
    ADD CONSTRAINT fk_persona_programa FOREIGN KEY (id_programa) REFERENCES PROGRAMA(id_programa);

ALTER TABLE FACULTAD
    ADD CONSTRAINT fk_facultad_decano FOREIGN KEY (id_decano) REFERENCES PERSONA(id_persona);

ALTER TABLE PROGRAMA
    ADD CONSTRAINT fk_programa_facultad FOREIGN KEY (id_facultad) REFERENCES FACULTAD(id_facultad);

ALTER TABLE CURSO
    ADD CONSTRAINT fk_curso_programa FOREIGN KEY (id_programa) REFERENCES PROGRAMA(id_programa);

ALTER TABLE INSCRIPCION
    ADD CONSTRAINT fk_inscripcion_curso FOREIGN KEY (id_curso) REFERENCES CURSO(id_curso);

ALTER TABLE INSCRIPCION
    ADD CONSTRAINT fk_inscripcion_estudiante FOREIGN KEY (id_estudiante) REFERENCES PERSONA(id_persona);

ALTER TABLE CURSO_PROFESOR
    ADD CONSTRAINT fk_curso_profesor_profesor FOREIGN KEY (id_profesor) REFERENCES PERSONA(id_persona);

ALTER TABLE CURSO_PROFESOR
    ADD CONSTRAINT fk_curso_profesor_curso FOREIGN KEY (id_curso) REFERENCES CURSO(id_curso);
 [42001-224]
2025-03-01 22:28:42.953535-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Parametro "#4" no está fijado
Parameter "#4" is not set; SQL statement:
INSERT INTO PERSONA (id_persona, nombre, apellidos, email) VALUES (?, ?, ?, ?) [90012-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.update(CommandContainer.java:159)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:216)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:174)
	at org.example.DAO.PersonaDAO.guardarPersona(PersonaDAO.java:38)
	at org.example.Main.main(Main.java:100)
2025-03-01 22:29:11.571139-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Parametro "#4" no está fijado
Parameter "#4" is not set; SQL statement:
INSERT INTO PERSONA (id_persona, nombre, apellidos, email) VALUES (?, ?, ?, ?) [90012-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.update(CommandContainer.java:159)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:216)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:174)
	at org.example.DAO.PersonaDAO.guardarPersona(PersonaDAO.java:38)
	at org.example.Main.main(Main.java:101)
2025-03-01 22:29:11.604217-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Parametro "#5" no está fijado
Parameter "#5" is not set; SQL statement:
INSERT INTO PROGRAMA (id_programa, nombre, duracion, registro, id_facultad) VALUES (?, ?, ?, ?, ?) [90012-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.update(CommandContainer.java:159)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:216)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:174)
	at org.example.DAO.ProgramaDAO.guardarPrograma(ProgramaDAO.java:29)
	at org.example.Main.main(Main.java:105)
2025-03-01 22:29:11.608780-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "PROGRAMA" no encontrada
Column "PROGRAMA" not found; SQL statement:
INSERT INTO CURSO (id_curso, nombre, activo, programa) VALUES (?, ?, ?, ?) [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.CursoDAO.guardarCurso(CursoDAO.java:19)
	at org.example.Main.main(Main.java:106)
2025-03-01 22:29:11.621278-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "ID_PROFESOR" no encontrada
Column "ID_PROFESOR" not found; SQL statement:
INSERT INTO FACULTAD (id_profesor, anio, semestre, id_curso) VALUES (?, ?, ?, ?) [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.CursoProfesorDAO.guardarCursoProfesor(CursoProfesorDAO.java:20)
	at org.example.Main.main(Main.java:108)
2025-03-01 22:30:48.072255-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Parametro "#4" no está fijado
Parameter "#4" is not set; SQL statement:
INSERT INTO PERSONA (id_persona, nombre, apellidos, email) VALUES (?, ?, ?, ?) [90012-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.update(CommandContainer.java:159)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:216)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:174)
	at org.example.DAO.PersonaDAO.guardarPersona(PersonaDAO.java:38)
	at org.example.Main.main(Main.java:100)
2025-03-01 22:30:48.084825-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Parametro "#4" no está fijado
Parameter "#4" is not set; SQL statement:
INSERT INTO PERSONA (id_persona, nombre, apellidos, email) VALUES (?, ?, ?, ?) [90012-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.update(CommandContainer.java:159)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:216)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:174)
	at org.example.DAO.PersonaDAO.guardarPersona(PersonaDAO.java:38)
	at org.example.Main.main(Main.java:101)
2025-03-01 22:30:48.092300-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ha sido cerrada
The database has been closed; SQL statement:
INSERT INTO PERSONA (id_persona, nombre, apellidos, email, tipo_contrato) VALUES (?, ?, ?, ?, ?) [90098-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.engine.SessionLocal.getDatabase(SessionLocal.java:666)
	at org.h2.command.Prepared.getDatabase(Prepared.java:496)
	at org.h2.command.Prepared.<init>(Prepared.java:86)
	at org.h2.command.dml.DataChangeStatement.<init>(DataChangeStatement.java:29)
	at org.h2.command.dml.CommandWithValues.<init>(CommandWithValues.java:31)
	at org.h2.command.dml.Insert.<init>(Insert.java:72)
	at org.h2.command.Parser.parseInsert(Parser.java:1533)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.PersonaDAO.guardarProfesor(PersonaDAO.java:72)
	at org.example.DAO.PersonaDAO.guardarPersona(PersonaDAO.java:26)
	at org.example.Main.main(Main.java:103)
2025-03-01 22:30:48.096800-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:314)
	at org.example.DAO.FacultadDAO.guardarFacultad(FacultadDAO.java:20)
	at org.example.Main.main(Main.java:104)
2025-03-01 22:30:48.101821-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:314)
	at org.example.DAO.ProgramaDAO.guardarPrograma(ProgramaDAO.java:19)
	at org.example.Main.main(Main.java:105)
2025-03-01 22:30:48.104808-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:314)
	at org.example.DAO.CursoDAO.guardarCurso(CursoDAO.java:19)
	at org.example.Main.main(Main.java:106)
2025-03-01 22:30:48.106807-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:314)
	at org.example.DAO.InscripcionDAO.guardarInscripcion(InscripcionDAO.java:19)
	at org.example.Main.main(Main.java:107)
2025-03-01 22:30:48.110942-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:314)
	at org.example.DAO.CursoProfesorDAO.guardarCursoProfesor(CursoProfesorDAO.java:20)
	at org.example.Main.main(Main.java:108)
2025-03-01 22:33:41.019674-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:314)
	at org.example.DAO.ProgramaDAO.guardarPrograma(ProgramaDAO.java:19)
	at org.example.Main.main(Main.java:105)
2025-03-01 22:33:41.030865-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:314)
	at org.example.DAO.CursoDAO.guardarCurso(CursoDAO.java:19)
	at org.example.Main.main(Main.java:106)
2025-03-01 22:33:41.033888-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:314)
	at org.example.DAO.InscripcionDAO.guardarInscripcion(InscripcionDAO.java:19)
	at org.example.Main.main(Main.java:107)
2025-03-01 22:33:41.037890-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:314)
	at org.example.DAO.CursoProfesorDAO.guardarCursoProfesor(CursoProfesorDAO.java:20)
	at org.example.Main.main(Main.java:108)
2025-03-01 22:34:02.083382-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Parametro "#5" no está fijado
Parameter "#5" is not set; SQL statement:
INSERT INTO PROGRAMA (id_programa, nombre, duracion, registro, id_facultad) VALUES (?, ?, ?, ?, ?) [90012-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.update(CommandContainer.java:159)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:216)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:174)
	at org.example.DAO.ProgramaDAO.guardarPrograma(ProgramaDAO.java:29)
	at org.example.Main.main(Main.java:105)
2025-03-01 22:34:02.096489-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:314)
	at org.example.DAO.CursoDAO.guardarCurso(CursoDAO.java:19)
	at org.example.Main.main(Main.java:106)
2025-03-01 22:34:02.098499-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:314)
	at org.example.DAO.InscripcionDAO.guardarInscripcion(InscripcionDAO.java:19)
	at org.example.Main.main(Main.java:107)
2025-03-01 22:34:02.102556-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:314)
	at org.example.DAO.CursoProfesorDAO.guardarCursoProfesor(CursoProfesorDAO.java:20)
	at org.example.Main.main(Main.java:108)
2025-03-01 22:36:02.494700-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: La cantidad de columnas no coincide
Column count does not match; SQL statement:
INSERT INTO PERSONA (id_persona, nombre, apellidos, email, tipo, codigo, id_programa, activo, promedio) VALUES (?, ?, ?, ?, ?, ?, ?, ?) [21002-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.command.dml.Insert.doPrepare(Insert.java:295)
	at org.h2.command.dml.DataChangeStatement.prepare(DataChangeStatement.java:37)
	at org.h2.command.Parser.prepareCommand(Parser.java:489)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.PersonaDAO.guardarEstudiante(PersonaDAO.java:51)
	at org.example.DAO.PersonaDAO.guardarPersona(PersonaDAO.java:23)
	at org.example.Main.main(Main.java:102)
2025-03-01 22:38:24.842658-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: La cantidad de columnas no coincide
Column count does not match; SQL statement:
INSERT INTO PERSONA (id_persona, nombre, apellidos, email, tipo,  tipo_contrato) VALUES (?, ?, ?, ?, ?) [21002-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.command.dml.Insert.doPrepare(Insert.java:295)
	at org.h2.command.dml.DataChangeStatement.prepare(DataChangeStatement.java:37)
	at org.h2.command.Parser.prepareCommand(Parser.java:489)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.PersonaDAO.guardarProfesor(PersonaDAO.java:74)
	at org.example.DAO.PersonaDAO.guardarPersona(PersonaDAO.java:26)
	at org.example.Main.main(Main.java:103)
2025-03-01 22:38:24.862332-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Parametro "#5" no está fijado
Parameter "#5" is not set; SQL statement:
INSERT INTO PROGRAMA (id_programa, nombre, duracion, registro, id_facultad) VALUES (?, ?, ?, ?, ?) [90012-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.update(CommandContainer.java:159)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:216)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:174)
	at org.example.DAO.ProgramaDAO.guardarPrograma(ProgramaDAO.java:29)
	at org.example.Main.main(Main.java:105)
2025-03-01 22:38:24.866787-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "PROGRAMA" no encontrada
Column "PROGRAMA" not found; SQL statement:
INSERT INTO CURSO (id_curso, nombre, activo, programa) VALUES (?, ?, ?, ?) [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.CursoDAO.guardarCurso(CursoDAO.java:19)
	at org.example.Main.main(Main.java:106)
2025-03-01 22:38:24.876378-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "ID_PROFESOR" no encontrada
Column "ID_PROFESOR" not found; SQL statement:
INSERT INTO FACULTAD (id_profesor, anio, semestre, id_curso) VALUES (?, ?, ?, ?) [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.CursoProfesorDAO.guardarCursoProfesor(CursoProfesorDAO.java:20)
	at org.example.Main.main(Main.java:108)
2025-03-01 22:38:32.452997-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: La cantidad de columnas no coincide
Column count does not match; SQL statement:
INSERT INTO PERSONA (id_persona, nombre, apellidos, email, tipo,  tipo_contrato) VALUES (?, ?, ?, ?, ?) [21002-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.command.dml.Insert.doPrepare(Insert.java:295)
	at org.h2.command.dml.DataChangeStatement.prepare(DataChangeStatement.java:37)
	at org.h2.command.Parser.prepareCommand(Parser.java:489)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.PersonaDAO.guardarProfesor(PersonaDAO.java:74)
	at org.example.DAO.PersonaDAO.guardarPersona(PersonaDAO.java:26)
	at org.example.Main.main(Main.java:103)
2025-03-01 22:38:32.464025-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Parametro "#5" no está fijado
Parameter "#5" is not set; SQL statement:
INSERT INTO PROGRAMA (id_programa, nombre, duracion, registro, id_facultad) VALUES (?, ?, ?, ?, ?) [90012-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.update(CommandContainer.java:159)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:216)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:174)
	at org.example.DAO.ProgramaDAO.guardarPrograma(ProgramaDAO.java:29)
	at org.example.Main.main(Main.java:105)
2025-03-01 22:38:32.466024-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "PROGRAMA" no encontrada
Column "PROGRAMA" not found; SQL statement:
INSERT INTO CURSO (id_curso, nombre, activo, programa) VALUES (?, ?, ?, ?) [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.CursoDAO.guardarCurso(CursoDAO.java:19)
	at org.example.Main.main(Main.java:106)
2025-03-01 22:38:32.472554-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "ID_PROFESOR" no encontrada
Column "ID_PROFESOR" not found; SQL statement:
INSERT INTO FACULTAD (id_profesor, anio, semestre, id_curso) VALUES (?, ?, ?, ?) [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.CursoProfesorDAO.guardarCursoProfesor(CursoProfesorDAO.java:20)
	at org.example.Main.main(Main.java:108)
2025-03-01 22:38:46.193544-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: La cantidad de columnas no coincide
Column count does not match; SQL statement:
INSERT INTO PERSONA (id_persona, nombre, apellidos, email, tipo,  tipo_contrato) VALUES (?, ?, ?, ?, ?) [21002-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.command.dml.Insert.doPrepare(Insert.java:295)
	at org.h2.command.dml.DataChangeStatement.prepare(DataChangeStatement.java:37)
	at org.h2.command.Parser.prepareCommand(Parser.java:489)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.PersonaDAO.guardarProfesor(PersonaDAO.java:74)
	at org.example.DAO.PersonaDAO.guardarPersona(PersonaDAO.java:26)
	at org.example.Main.main(Main.java:103)
2025-03-01 22:38:46.213773-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Parametro "#5" no está fijado
Parameter "#5" is not set; SQL statement:
INSERT INTO PROGRAMA (id_programa, nombre, duracion, registro, id_facultad) VALUES (?, ?, ?, ?, ?) [90012-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.update(CommandContainer.java:159)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:216)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:174)
	at org.example.DAO.ProgramaDAO.guardarPrograma(ProgramaDAO.java:29)
	at org.example.Main.main(Main.java:105)
2025-03-01 22:38:46.217772-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:314)
	at org.example.DAO.CursoDAO.guardarCurso(CursoDAO.java:19)
	at org.example.Main.main(Main.java:106)
2025-03-01 22:38:46.221771-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:314)
	at org.example.DAO.InscripcionDAO.guardarInscripcion(InscripcionDAO.java:19)
	at org.example.Main.main(Main.java:107)
2025-03-01 22:38:46.224283-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:314)
	at org.example.DAO.CursoProfesorDAO.guardarCursoProfesor(CursoProfesorDAO.java:20)
	at org.example.Main.main(Main.java:108)
2025-03-01 22:38:58.960313-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: La cantidad de columnas no coincide
Column count does not match; SQL statement:
INSERT INTO PERSONA (id_persona, nombre, apellidos, email, tipo,  tipo_contrato) VALUES (?, ?, ?, ?, ?) [21002-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.command.dml.Insert.doPrepare(Insert.java:295)
	at org.h2.command.dml.DataChangeStatement.prepare(DataChangeStatement.java:37)
	at org.h2.command.Parser.prepareCommand(Parser.java:489)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.PersonaDAO.guardarProfesor(PersonaDAO.java:74)
	at org.example.DAO.PersonaDAO.guardarPersona(PersonaDAO.java:26)
	at org.example.Main.main(Main.java:103)
2025-03-01 22:38:58.976818-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Parametro "#5" no está fijado
Parameter "#5" is not set; SQL statement:
INSERT INTO PROGRAMA (id_programa, nombre, duracion, registro, id_facultad) VALUES (?, ?, ?, ?, ?) [90012-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.update(CommandContainer.java:159)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:216)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:174)
	at org.example.DAO.ProgramaDAO.guardarPrograma(ProgramaDAO.java:29)
	at org.example.Main.main(Main.java:105)
2025-03-01 22:38:58.977832-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "PROGRAMA" no encontrada
Column "PROGRAMA" not found; SQL statement:
INSERT INTO CURSO (id_curso, nombre, activo, programa) VALUES (?, ?, ?, ?) [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.CursoDAO.guardarCurso(CursoDAO.java:19)
	at org.example.Main.main(Main.java:106)
2025-03-01 22:38:58.983854-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "ID_PROFESOR" no encontrada
Column "ID_PROFESOR" not found; SQL statement:
INSERT INTO FACULTAD (id_profesor, anio, semestre, id_curso) VALUES (?, ?, ?, ?) [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.CursoProfesorDAO.guardarCursoProfesor(CursoProfesorDAO.java:20)
	at org.example.Main.main(Main.java:108)
2025-03-01 22:39:47.213701-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: La cantidad de columnas no coincide
Column count does not match; SQL statement:
INSERT INTO PERSONA (id_persona, nombre, apellidos, email, tipo,  tipo_contrato) VALUES (?, ?, ?, ?, ?) [21002-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.command.dml.Insert.doPrepare(Insert.java:295)
	at org.h2.command.dml.DataChangeStatement.prepare(DataChangeStatement.java:37)
	at org.h2.command.Parser.prepareCommand(Parser.java:489)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.PersonaDAO.guardarProfesor(PersonaDAO.java:74)
	at org.example.DAO.PersonaDAO.guardarPersona(PersonaDAO.java:26)
	at org.example.Main.main(Main.java:103)
2025-03-01 22:40:07.895374-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Parametro "#5" no está fijado
Parameter "#5" is not set; SQL statement:
INSERT INTO PROGRAMA (id_programa, nombre, duracion, registro, id_facultad) VALUES (?, ?, ?, ?, ?) [90012-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.update(CommandContainer.java:159)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:216)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:174)
	at org.example.DAO.ProgramaDAO.guardarPrograma(ProgramaDAO.java:29)
	at org.example.Main.main(Main.java:105)
2025-03-01 22:40:07.899803-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "PROGRAMA" no encontrada
Column "PROGRAMA" not found; SQL statement:
INSERT INTO CURSO (id_curso, nombre, activo, programa) VALUES (?, ?, ?, ?) [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.CursoDAO.guardarCurso(CursoDAO.java:19)
	at org.example.Main.main(Main.java:106)
2025-03-01 22:40:07.909625-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "ID_PROFESOR" no encontrada
Column "ID_PROFESOR" not found; SQL statement:
INSERT INTO FACULTAD (id_profesor, anio, semestre, id_curso) VALUES (?, ?, ?, ?) [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.CursoProfesorDAO.guardarCursoProfesor(CursoProfesorDAO.java:20)
	at org.example.Main.main(Main.java:108)
2025-03-01 22:40:52.948773-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Parametro "#5" no está fijado
Parameter "#5" is not set; SQL statement:
INSERT INTO PROGRAMA (id_programa, nombre, duracion, registro, id_facultad) VALUES (?, ?, ?, ?, ?) [90012-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.update(CommandContainer.java:159)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:216)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:174)
	at org.example.DAO.ProgramaDAO.guardarPrograma(ProgramaDAO.java:29)
	at org.example.Main.main(Main.java:105)
2025-03-01 22:41:36.432237-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "PROGRAMA" no encontrada
Column "PROGRAMA" not found; SQL statement:
INSERT INTO CURSO (id_curso, nombre, activo, programa) VALUES (?, ?, ?, ?) [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.CursoDAO.guardarCurso(CursoDAO.java:19)
	at org.example.Main.main(Main.java:106)
2025-03-01 22:41:36.441104-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "ID_PROFESOR" no encontrada
Column "ID_PROFESOR" not found; SQL statement:
INSERT INTO FACULTAD (id_profesor, anio, semestre, id_curso) VALUES (?, ?, ?, ?) [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.CursoProfesorDAO.guardarCursoProfesor(CursoProfesorDAO.java:20)
	at org.example.Main.main(Main.java:108)
2025-03-01 22:41:53.695600-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "PROGRAMA" no encontrada
Column "PROGRAMA" not found; SQL statement:
INSERT INTO CURSO (id_curso, nombre, activo, programa) VALUES (?, ?, ?, ?) [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.CursoDAO.guardarCurso(CursoDAO.java:19)
	at org.example.Main.main(Main.java:106)
2025-03-01 22:41:53.707652-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "ID_PROFESOR" no encontrada
Column "ID_PROFESOR" not found; SQL statement:
INSERT INTO FACULTAD (id_profesor, anio, semestre, id_curso) VALUES (?, ?, ?, ?) [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.CursoProfesorDAO.guardarCursoProfesor(CursoProfesorDAO.java:20)
	at org.example.Main.main(Main.java:108)
2025-03-01 22:42:00.557335-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "PROGRAMA" no encontrada
Column "PROGRAMA" not found; SQL statement:
INSERT INTO CURSO (id_curso, nombre, activo, programa) VALUES (?, ?, ?, ?) [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.CursoDAO.guardarCurso(CursoDAO.java:19)
	at org.example.Main.main(Main.java:106)
2025-03-01 22:42:00.569404-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "ID_PROFESOR" no encontrada
Column "ID_PROFESOR" not found; SQL statement:
INSERT INTO FACULTAD (id_profesor, anio, semestre, id_curso) VALUES (?, ?, ?, ?) [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.CursoProfesorDAO.guardarCursoProfesor(CursoProfesorDAO.java:20)
	at org.example.Main.main(Main.java:108)
2025-03-01 22:42:13.956683-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "PROGRAMA" no encontrada
Column "PROGRAMA" not found; SQL statement:
INSERT INTO CURSO (id_curso, nombre, activo, programa) VALUES (?, ?, ?, ?) [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.CursoDAO.guardarCurso(CursoDAO.java:19)
	at org.example.Main.main(Main.java:106)
2025-03-01 22:42:45.815449-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "ID_PROFESOR" no encontrada
Column "ID_PROFESOR" not found; SQL statement:
INSERT INTO FACULTAD (id_profesor, anio, semestre, id_curso) VALUES (?, ?, ?, ?) [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.CursoProfesorDAO.guardarCursoProfesor(CursoProfesorDAO.java:20)
	at org.example.Main.main(Main.java:108)
2025-03-01 22:56:53.646629-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "ID_PROFESOR" no encontrada
Column "ID_PROFESOR" not found; SQL statement:
INSERT INTO FACULTAD (id_profesor, anio, semestre, id_curso) VALUES (?, ?, ?, ?) [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.CursoProfesorDAO.guardarCursoProfesor(CursoProfesorDAO.java:20)
	at org.example.Main.main(Main.java:108)
2025-03-01 22:59:08.250984-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "ID_PROFESOR" no encontrada
Column "ID_PROFESOR" not found; SQL statement:
INSERT INTO FACULTAD (id_profesor, anio, semestre, id_curso) VALUES (?, ?, ?, ?) [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.example.DAO.CursoProfesorDAO.guardarCursoProfesor(CursoProfesorDAO.java:20)
	at org.example.Main.main(Main.java:115)
